<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" ResponseEncoding="UTF-8" Inherits="" Debug="False" Description="Template description here." %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>

<%-- 注册 成员函数 --%>
<%@ Property Name="SourceData" Type="SchemaExplorer.DatabaseSchema" Optional="False" Category="Context" Description="指定的数据库" %>

<%-- 启用 MAP方式 System-CSharpAlias  --%>
<%@ Map Name="CSharpAlias" Src="System-CSharpAlias" Description="System to C# Type Map" %>
<%@ Map Name="JavaAlias" Src="JavaAlias.csmap" Description="Oracle to Java Type Map" %>

<script runat="template">
<!-- #include file=Function.cs -->
//Debugger.Break();
public TableSchemaCollection GetTableCollection(DatabaseSchema dataBase)
{
    TableSchemaCollection tables = new TableSchemaCollection(dataBase.Tables);
    return tables;
}
</script>
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:flex="http://www.springframework.org/schema/flex"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/flex 
		http://www.springframework.org/schema/flex/spring-flex-1.5.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
 
 	<!-- Supporting Spring MVC Infrastructure for RESTful @Controllers -->
 	<context:component-scan base-package="org.springframework.flex.samples" use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
	</context:component-scan>
 
 	<!-- Flex-specific Configuration -->
	<flex:message-broker mapping-order="1">
		<flex:mapping pattern="/messagebroker/*"/>
		<flex:message-service
			default-channels="my-streaming-amf,my-longpolling-amf,my-polling-amf" />
	<!-- <flex:secured /> -->
	</flex:message-broker>
	
 	<!-- Handles content negotiation for RESTful requests.  This is used in addition to the AmfHttpMessageConverter to 
 	     take advantage of it's ability to use the URL's file extension instead of relying on the Accept header.  Necessary 
 	     since the Accept header can't be manipulated by the Flash player. -->
 	<bean id="viewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
 		<property name="mediaTypes">
			<map>
				<entry key="amf" value="application/x-amf"/>
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.flex.http.AmfView" />
			</list>
		</property>
 	</bean>
 	
 	<!-- MessageTemplate makes it easy to publish messages -->
	<bean id="defaultMessageTemplate" class="org.springframework.flex.messaging.MessageTemplate" />

	<!-- Expose the service bean for BlazeDS remoting -->
    <% 
		TableSchemaCollection tables = GetTableCollection(SourceData);
		foreach(TableSchema dt in tables)
		{ %>
        <flex:remoting-destination ref="<%=StringUtil.ToCamelCase(dt.Name.ToLower())%>Service" />
	<%} %>
	

</beans>