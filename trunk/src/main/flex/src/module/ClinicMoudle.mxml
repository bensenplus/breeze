<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%" height="100%">
	
	<fx:Script>
		<![CDATA[
			import org.breeze.core.web.FormEvent;
			import org.breeze.core.web.Page;
			import org.breeze.flex.entity.Clinic;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable] private var clinics:ArrayCollection;
			
			private function resultHandler(event:ResultEvent):void
			{
				clinics = event.result as ArrayCollection
			}
			
			private function faultHandler(event:FaultEvent):void
			{
				Alert.show(event.fault.faultDetail);
			}
			
			public function openRecord(clinic:Clinic):void
			{
				var children:Array = tn.getChildren();
				for (var i:int = 0; i<children.length; i++)
				{
					if (ClinicForm(children[i]).clinic.clinicId == clinic.clinicId)
					{
						tn.selectedChild = children[i];
						return;
					}
				}
				
				var form:ClinicForm = new ClinicForm();
				form.addEventListener(FormEvent.CREATED, clinicCreatedHandler);
				form.addEventListener(FormEvent.UPDATED, clinicUpdatedHandler);
				form.addEventListener(FormEvent.DELETED, clinicDeletedHandler);
				tn.addChild(form);
				form.clinic = clinic;
				tn.selectedChild = form;
			}
			
			private function search():void
			{
				var page:Page = new Page();
				ro.select(page);
			}
			
			private function clinicCreatedHandler(event:FormEvent):void
			{
				search();				
			}
			
			private function clinicUpdatedHandler(event:FormEvent):void
			{
				search();				
			}
			
			private function clinicDeletedHandler(event:FormEvent):void
			{
				tn.removeChild(event.target as ClinicForm);
				search();				
			}
			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RemoteObject id="ro" destination="clinicService" fault="faultHandler(event)" endpoint="http://localhost:8080/breeze/messagebroker/amf">
			<s:method name="select" result="resultHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	
	
	<s:TextInput id="searchStr"/>
	<s:Button x="143" y="2" label="Search" click="search()"/>
	<mx:Button x="221" y="2" label="New clinic" click="openRecord(new Clinic())"/>
	
	
	<mx:VDividedBox top="40" width="100%" height="100%">
		<mx:DataGrid id="dg" width="100%" height="50%" dataProvider="{clinics}"
					 doubleClick="openRecord(dg.selectedItem as Clinic)" doubleClickEnabled="true">
			<mx:columns>
				<mx:DataGridColumn dataField="clinicId" headerText="科室标识"/>  
				<mx:DataGridColumn dataField="hospitalId" headerText="医院标识"/>  
				<mx:DataGridColumn dataField="parentId" headerText="上级科室标识"/>  
				<mx:DataGridColumn dataField="code" headerText="科室编码"/>  
				<mx:DataGridColumn dataField="name" headerText="科室名称"/>  
				<mx:DataGridColumn dataField="introduction" headerText="科室介绍"/>  
				<mx:DataGridColumn dataField="delFlag" headerText="删除标志"/>  
				<mx:DataGridColumn dataField="pyCode" headerText="拼音码"/>  
				<mx:DataGridColumn dataField="dCode" headerText="自定义编码"/>  
				<mx:DataGridColumn dataField="outCode" headerText="HIS门诊编码"/>  
				<mx:DataGridColumn dataField="inCode" headerText="HIS住院编码"/>  
			</mx:columns>
		</mx:DataGrid>
		<mx:TabNavigator id="tn" width="100%" height="50%"/>
	</mx:VDividedBox>
	
</s:Module>


