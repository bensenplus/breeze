<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." ResponseEncoding="UTF-8"  %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>

<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>


<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="指定的数据库表结构" %>
<%@ Property Name="OutputPath" Type="System.String" Default="d:\atuoCode" Optional="False" Category="Context" Description="源码输出主目录" %>
<%@ Property Name="RootTableSpaceName" Type="System.String" Default="org.breeze" Optional="False" Category="Context" Description="源码输出的模块名称" %>


<%-- 启用 MAP方式 System-CSharpAlias  --%>
<%@ Map Name="CSharpAlias" Src="System-CSharpAlias" Description="System to C# Type Map" %>
<%@ Map Name="JavaAlias" Src="JavaAlias.csmap" Description="Oracle to Java Type Map" %>
<%-- 注册 子模板 --%>
<%@ Register Name="TemplateModel" Template="TemplateModel.cst" %>
<%@ Register Name="TemplateDao" Template="TemplateDao.cst" %>
<%@ Register Name="TemplateDaoXml" Template="TemplateDaoXml.cst" %>
<%@ Register Name="TemplateService" Template="TemplateService.cst" %>
<%@ Register Name="TemplateController" Template="TemplateController.cst" %>
<%@ Register Name="TemplateJsp" Template="TemplateJsp.cst" %>
<%@ Register Name="TemplateJsp_edit" Template="TemplateJsp_edit.cst" %>

<%
    //Debugger.Break();    
    //this.Progress.MaximumValue = 100;
    //this.Progress.MinimumValue = 1;
    //this.Progress.Step = 1;
    /// 主输出
    RenderMain();
%>

Done and Finish  !!!!!!!!!!!!!!!!!!!!!!!!

<script runat="template">

<!-- #include file=Function.cs -->

/// 创建输出文件
public void RenderMain()
{
    // 判断文最外层目录是否存在,否则创建 
    if(Directory.Exists(OutputPath) == false)
    {
        Directory.CreateDirectory(OutputPath);
    }

	CreateTemplateModel(SourceTable);
	CreateTemplateDaoXml(SourceTable);
    CreateTemplateDao(SourceTable);
    CreateTemplateService(SourceTable);
    CreateTemplateController(SourceTable);
	CreateTemplateJsp(SourceTable);
	CreateTemplateJsp_edit(SourceTable);
    
}

///  输出 Model 模块
public void CreateTemplateModel( TableSchema tb)
{
	String package = "java."+RootTableSpaceName;
	string strFileName = GetFileName(OutputPath, package, "entity"  ,ModelName(tb.Name),"java");
        
	/// 创建文件
    FileStream fs = new FileStream(strFileName,FileMode.Create,FileAccess.Write);
    StreamWriter sw = new StreamWriter(fs, System.Text.Encoding.UTF8);
        
    // 调用子模板进行创建 
    TemplateModel template = new TemplateModel();
    
    // 子模板所需要的入参
    template.SourceTable = tb;
	template.RootTableSpaceName = this.RootTableSpaceName;
   
    /// 输出子模板文档
    template.Render(sw);
    
	/// 结束
    //sw.WriteLine("//end of class " + tb.Name);
    // 关闭输出流
    sw.Close();
    //关闭文档
    fs.Close();
}



///  输出 Dao 模块
public void CreateTemplateDao( TableSchema tb)
{
	String package = "java."+RootTableSpaceName;
	string strFileName = GetFileName(OutputPath, package , "dao"  ,DaoName(tb.Name),"java");
        
	/// 创建文件
    FileStream fs = new FileStream(strFileName,FileMode.Create,FileAccess.Write);
    StreamWriter sw = new StreamWriter(fs, System.Text.Encoding.UTF8);
        
    // 调用子模板进行创建 
    TemplateDao template = new TemplateDao();
    
    // 子模板所需要的入参
    template.SourceTable = tb;
	template.RootTableSpaceName = this.RootTableSpaceName;
   
    /// 输出子模板文档
    template.Render(sw);
    
	/// 结束
    //sw.WriteLine("//end of class " + tb.Name);
    // 关闭输出流
    sw.Close();
    //关闭文档
    fs.Close();
}

///  输出 Dao xml
public void CreateTemplateDaoXml( TableSchema tb)
{
	String package = "java."+RootTableSpaceName;
	string strFileName = GetFileName(OutputPath, package , "dao"  ,ModelName(tb.Name)+"Mapper","xml");
        
	/// 创建文件
    FileStream fs = new FileStream(strFileName,FileMode.Create,FileAccess.Write);
    StreamWriter sw = new StreamWriter(fs, System.Text.Encoding.UTF8);
        
    // 调用子模板进行创建 
    TemplateDaoXml template = new TemplateDaoXml();
    
    // 子模板所需要的入参
    template.SourceTable = tb;
	template.RootTableSpaceName = this.RootTableSpaceName;
   
    /// 输出子模板文档
    template.Render(sw);
    
	/// 结束
    //sw.WriteLine("//end of class " + tb.Name);
    // 关闭输出流
    sw.Close();
    //关闭文档
    fs.Close();
}

///  输出 Dao xml
public void CreateTemplateService( TableSchema tb)
{
	String package = "java."+RootTableSpaceName;
	string strFileName = GetFileName(OutputPath, package , "service"  ,ServiceName(tb.Name),"java");
        
	/// 创建文件
    FileStream fs = new FileStream(strFileName,FileMode.Create,FileAccess.Write);
    StreamWriter sw = new StreamWriter(fs, System.Text.Encoding.UTF8);
        
    // 调用子模板进行创建 
    TemplateService template = new TemplateService();
    
    // 子模板所需要的入参
    template.SourceTable = tb;
	template.RootTableSpaceName = this.RootTableSpaceName;
   
    /// 输出子模板文档
    template.Render(sw);
    
	/// 结束
    //sw.WriteLine("//end of class " + tb.Name);
    // 关闭输出流
    sw.Close();
    //关闭文档
    fs.Close();
}



///  输出 Controller 模块
public void CreateTemplateController( TableSchema tb)
{
	String package = "java."+RootTableSpaceName;
	string strFileName = GetFileName(OutputPath, package , "controller"  ,ControllerName(tb.Name),"java");
        
	/// 创建文件
    FileStream fs = new FileStream(strFileName,FileMode.Create,FileAccess.Write);
    StreamWriter sw = new StreamWriter(fs, System.Text.Encoding.UTF8);
        
    // 调用子模板进行创建 
    TemplateController template = new TemplateController();
    
    // 子模板所需要的入参
    template.SourceTable = tb;
	template.RootTableSpaceName = this.RootTableSpaceName;
   
    /// 输出子模板文档
    template.Render(sw);
    
	/// 结束
    //sw.WriteLine("//end of class " + tb.Name);
    // 关闭输出流
    sw.Close();
    //关闭文档
    fs.Close();
}



///  输出 JSP 模块
public void CreateTemplateJsp( TableSchema tb)
{
	String package = "webapp.jsp";
	string strFileName = GetFileName(OutputPath, package , StringUtil.ToCamelCase(tb.Name.ToLower()), "list","jsp");
        
	/// 创建文件
    FileStream fs = new FileStream(strFileName,FileMode.Create,FileAccess.Write);
    StreamWriter sw = new StreamWriter(fs, System.Text.Encoding.UTF8);
        
    // 调用子模板进行创建 
    TemplateJsp template = new TemplateJsp();
    
    // 子模板所需要的入参
    template.SourceTable = tb;
	template.RootTableSpaceName = this.RootTableSpaceName;
   
    /// 输出子模板文档
    template.Render(sw);
    
	/// 结束
    //sw.WriteLine("//end of class " + tb.Name);
    // 关闭输出流
    sw.Close();
    //关闭文档
    fs.Close();
}

///  输出 JSP 模块
public void CreateTemplateJsp_edit( TableSchema tb)
{
	String package = "webapp.jsp";
	string strFileName = GetFileName(OutputPath, package , StringUtil.ToCamelCase(tb.Name.ToLower()), "edit","jsp");
        
	/// 创建文件
    FileStream fs = new FileStream(strFileName,FileMode.Create,FileAccess.Write);
    StreamWriter sw = new StreamWriter(fs, System.Text.Encoding.UTF8);
        
    // 调用子模板进行创建 
    TemplateJsp_edit template = new TemplateJsp_edit();
    
    // 子模板所需要的入参
    template.SourceTable = tb;
	template.RootTableSpaceName = this.RootTableSpaceName;
   
    /// 输出子模板文档
    template.Render(sw);
    
	/// 结束
    //sw.WriteLine("//end of class " + tb.Name);
    // 关闭输出流
    sw.Close();
    //关闭文档
    fs.Close();
}

</script>