<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" ResponseEncoding="UTF-8" Inherits="" Debug="False" Description="Template description here." %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>

<%-- 注册 定义的成员变量 --%>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="DB" Description="请选择名的数据来源" %>
<%@ Property Name="RootTableSpaceName" Type="System.String" Default="org.breeze" Optional="False" Category="Context" Description="源码输出的模块名称" %>

<%-- 启用 MAP方式 System-CSharpAlias  --%>
<%@ Map Name="CSharpAlias" Src="System-CSharpAlias" Description="System to C# Type Map" %>
<%@ Map Name="JavaAlias" Src="FlexAlias.csmap" Description="Oracle to Java Type Map" %>
<%@ Map Name="FlexAlias" Src="FlexAlias.csmap" Description="Oracle to Flex Type Map" %>

<script runat="template">
<!-- #include file=Function.cs -->
//Debugger.Break();
</script>
<% 
//名称定义
String Controller = ControllerName(SourceTable.Name);
String Mode = ModelName(SourceTable.Name);
String mode = StringUtil.ToCamelCase(SourceTable.Name.ToLower());
String Service = ServiceName(SourceTable.Name);
String service = StringUtil.ToCamelCase(ServiceName(SourceTable.Name));
String map = StringUtil.ToCamelCase(SourceTable.Name);
String Key = JavaAlias[SourceTable.Columns[0].SystemType.FullName];
String key = StringUtil.ToCamelCase(SourceTable.Columns[0].Name);
%>
<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="800" height="600"
		   label="{<%=mode%>.<%=key%>==0?<%=mode%>.<%=key%>:'New Record'}">

	<fx:Metadata>
		[Event(name="Created", type="org.breeze.core.web.FormEvent")]
		[Event(name="Updated", type="org.breeze.core.web.FormEvent")]
		[Event(name="Deleted", type="org.breeze.core.web.FormEvent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import org.breeze.core.web.FormEvent;
			
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
            
			import org.breeze.flex.entity.<%=Mode%>;

			
			[Bindable] public var <%=mode%>:<%=Mode%>;
			
			private function save():void
			{
                <% foreach (ColumnSchema column in this.SourceTable.Columns) {
                    string type = FlexAlias[column.SystemType.FullName];
                %>
                    
					<% if (type.Equals("Number") || type.Equals("int")) { %> 
						<%=mode%>.<%= fieldName(column.Name) %> = Number(txt_<%=fieldName(column.Name)%>.text);
					<%} else if (type.Equals("Date")) { %> 
						<%=mode%>.<%= fieldName(column.Name) %> = Date(txt_<%=fieldName(column.Name)%>.text);
					<%}else{%>
						<%=mode%>.<%= fieldName(column.Name) %> = txt_<%=fieldName(column.Name)%>.text;
					<%}%>	             
                <% }%>
				if (<%=mode%>.<%=key%> == 0)
				{
					ro.save(<%=mode%>);	
				}
				else
				{
					ro.save(<%=mode%>);
				}
			}			
			
			private function deleteItem():void
			{
				ro.remove(<%=mode%>);		
			}
			
			private function create_resultHandler(event:ResultEvent):void
			{
				<%=mode%>.<%=key%> = event.result.<%=key%>;
				dispatchEvent(new FormEvent(FormEvent.CREATED, <%=mode%>));			
			}
			
			private function update_resultHandler(event:ResultEvent):void
			{
				dispatchEvent(new FormEvent(FormEvent.UPDATED, <%=mode%>));
				PopUpManager.removePopUp(this);
			}
			
			private function remove_resultHandler(event:ResultEvent):void
			{
				dispatchEvent(new FormEvent(FormEvent.DELETED, <%=mode%>));
				PopUpManager.removePopUp(this);
			}
			
			public function titleWindow_close(event:CloseEvent):void
			{
				PopUpManager.removePopUp(this);
			}
			
			private function faultHandler(event:FaultEvent):void
			{
				Alert.show(event.fault.faultDetail);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:RemoteObject id="ro" destination="<%=service%>" fault="faultHandler(event)" endpoint="http://localhost:8080/breeze/messagebroker/amf">
			<mx:method name="save" result="create_resultHandler(event)"/>
			<mx:method name="save" result="update_resultHandler(event)"/>
			<mx:method name="remove" result="remove_resultHandler(event)"/>
		</mx:RemoteObject>
	</fx:Declarations>

	<mx:Form>
         <% foreach (ColumnSchema column in this.SourceTable.Columns) {%>    
            <mx:FormItem label="<%=column.Description%>">
			    <mx:TextInput id="txt_<%=fieldName(column.Name)%>" text="{<%=mode%>.<%= fieldName(column.Name) %>}" enabled="true"/>
		   </mx:FormItem>
         <% }%>
	</mx:Form>
	
	<s:HGroup right="8" bottom="8">
		<s:Button label="Close" click="parent.removeChild(this)"/>
		<s:Button label="Save" click="save()"/>
		<s:Button label="Delete" click="deleteItem()"/>
	</s:HGroup>

</mx:TitleWindow>

