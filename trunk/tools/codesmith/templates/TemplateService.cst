<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" ResponseEncoding="UTF-8" Inherits="" Debug="False" Description="Template description here." %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>

<%-- 注册 定义的成员变量 --%>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="DB" Description="请选择名的数据来源" %>
<%@ Property Name="RootTableSpaceName" Type="System.String" Default="org.breeze" Optional="False" Category="Context" Description="源码输出的模块名称" %>

<%-- 启用 MAP方式 System-CSharpAlias  --%>
<%@ Map Name="CSharpAlias" Src="System-CSharpAlias" Description="System to C# Type Map" %>
<%@ Map Name="JavaAlias" Src="JavaAlias.csmap" Description="Oracle to Java Type Map" %>

<script runat="template">
<!-- #include file=Function.cs -->
//Debugger.Break();
</script>
<% 
//名称定义
String Mode = ModelName(SourceTable.Name.ToLower());
String mode = StringUtil.ToCamelCase(SourceTable.Name.ToLower());
String Dao = DaoName(SourceTable.Name);
String dao = StringUtil.ToCamelCase(Dao);
String Service = ServiceName(SourceTable.Name);
String service = StringUtil.ToCamelCase(ServiceName(SourceTable.Name.ToLower()));
String map = StringUtil.ToCamelCase(SourceTable.Name.ToLower());
%>
package <%=RootTableSpaceName%>.service;

import java.util.List;
import javax.annotation.Resource;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.ModelMap;

import <%=RootTableSpaceName%>.entity.Page;
import <%=RootTableSpaceName%>.entity.<%=Mode%>;
import <%=RootTableSpaceName%>.dao.<%=Dao%>;


@Service("<%=service%>")
public class <%=Service%> {

	private final Logger logger = LoggerFactory.getLogger(<%=Service%>.class); 

    @Resource(name = "<%=dao%>")
	private <%=Dao%> <%=dao%>;


	public List<<%=Mode%>> select(Page page) {
        page.setCount(<%=dao%>.count());
		List<<%=Mode%>> list = <%=dao%>.select(page);
		return list;
	}

	public <%=Mode%> get(<%=GetKeys(SourceTable,true)%>) {
	    <%=Mode%> <%=mode%> = <%=dao%>.get(<%=GetKeys(SourceTable,false)%>);
        return <%=mode%>;
	}    
    
	public int save(<%=Mode%> <%=mode%>) {
    
       if(<%=mode%>.<%= getter(SourceTable.Columns[0].Name)%>() == null) {
            return <%=dao%>.insert(<%=mode%>);
       }else{
            return <%=dao%>.update(<%=mode%>);
       }
	}

	public int delete(<%=GetKeys(SourceTable,true)%>) {
		return <%=dao%>.delete(<%=GetKeys(SourceTable,false)%>);
	}

}