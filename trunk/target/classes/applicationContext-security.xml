<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/security
		   http://www.springframework.org/schema/security/spring-security-3.1.xsd ">

		<debug/>
		 <global-method-security secured-annotations="enabled" />
		<http pattern="/resources/**" security="none"/>
	    <http auto-config="true">           
	        <form-login />  
	        <logout/>  
	        <!-- 实现免登陆验证 -->  
	        <remember-me />  
	        <session-management invalid-session-url="/spring_security_login?login_error">
	        <!-- 防止同一用户多次登录，使第二次登录失败  --> 
	        <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />  
	        </session-management>  
	        <custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/>  
	    </http>
	    
		 <!-- 登录验证器 -->
	    <beans:bean id="loginFilter"
			class="org.breeze.security.MyUsernamePasswordAuthenticationFilter">
			<!-- 处理登录 -->
			<beans:property name="filterProcessesUrl" value="/j_spring_security_check"></beans:property>
			<beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>
			<beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></beans:property>
			<beans:property name="authenticationManager" ref="myAuthenticationManager"></beans:property>
			<beans:property name="usersDao" ref="usersMapper"></beans:property>
		</beans:bean>
		<beans:bean id="loginLogAuthenticationSuccessHandler"
			class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
			<beans:property name="defaultTargetUrl" value="/accout/list"></beans:property>
			<beans:property name="alwaysUseDefaultTargetUrl" value="true"></beans:property>
		</beans:bean>
		<beans:bean id="simpleUrlAuthenticationFailureHandler"
			class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
			<beans:property name="defaultFailureUrl" value="/login.jsp"></beans:property>
		</beans:bean>

		<!-- 认证过滤器 -->
		<beans:bean id="myFilter" class="org.breeze.security.MySecurityFilter">
			<beans:property name="rejectPublicInvocations" value="false"></beans:property>
		 	<!-- 用户拥有的权限 --> 
		     <beans:property name="authenticationManager"     ref="myAuthenticationManager" />
		      <!-- 用户是否拥有所请求资源的权限 --> 
		     <beans:property name="accessDecisionManager"      ref="myAccessDecisionManager" />
		     <!-- 资源与权限对应关系 --> 
		     <beans:property name="securityMetadataSource"     ref="mySecurityMetadataSource" />
		 </beans:bean>
    
		 <authentication-manager alias="myAuthenticationManager">
	        <authentication-provider   user-service-ref="myUserDetailService">
	              <!-- <password-encoder hash="md5" />  -->       
	        </authentication-provider>
	    </authentication-manager>
    
<!-- 	    <beans:bean id="myUserDetailService"     class="org.breeze.security.MyUserDetailService" />
	    访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源
	    <beans:bean id="myAccessDecisionManager"    class="org.breeze.security.MyAccessDecisionManager"/> 
	    资源源数据定义，即定义某一资源可以被哪些角色访问
	    <beans:bean id="mySecurityMetadataSource"   class="org.breeze.security.MySecurityMetadataSource" /> -->
  
   </beans:beans>
