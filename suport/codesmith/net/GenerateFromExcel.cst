<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." ResponseEncoding="UTF-8"  %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>

<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data.OleDb" %>
<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>

<%-- 注册 定义的成员变量 --%>
<%@ Property Name="excelPath" Type="System.String" Default="D:/phis设计_0314.xls" Optional="False" Category="Context" Description="Excel文件路径" %>
<%@ Property Name="OutPath" Type="System.String" Default="D:/src" Optional="False" Category="Context" Description="源码输出路径" %>


<%-- 启用 MAP方式 System-CSharpAlias  --%>
<%@ Map Name="CSharpAlias" Src="System-CSharpAlias" Description="System to C# Type Map" %>


<%-- 注册 子模板 --%>
<%@ Register Name="JavaService" Template="JavaService.cst" %>



<%
    //Debugger.Break();    
    //this.Progress.MaximumValue = 100;
    //this.Progress.MinimumValue = 1;
    //this.Progress.Step = 1;
    /// 主输出
    RenderMain();
%>

Done and Finish  !!!!!!!!!!!!!!!!!!!!!!!!

<script runat="template">

<!-- #include file=Function.cs -->

/// 创建输出文件
public void RenderMain()
{    
    //名称定义
    DataTable table = LoadDataFromExcel(excelPath,"服务");
    PrintValues(table);
	CreateTemplate<JavaService>(table, "java", "service.log");
}


///  输出模块
public void CreateTemplate<T>(DataTable table, string path, string filename)
{
    path = OutPath +"/"+ path.Replace(".",@"/");
    if(Directory.Exists(path) == false)
    {
        Directory.CreateDirectory(path);
    }
    path = path +"/"+ filename;
        
	/// 创建文件
    FileStream fs = new FileStream(path,FileMode.Create,FileAccess.Write);
    StreamWriter sw = new StreamWriter(fs, System.Text.Encoding.UTF8);
        
    // 调用子模板进行创建 
    T template = System.Activator.CreateInstance<T>();
    
    Type type = typeof(T);
    type.GetProperty("Table").SetValue(template, table,null);
    type.GetMethod("Render").Invoke(template, new Object[]{sw});
    sw.Close();
    //关闭文档
    fs.Close();
    Response.WriteLine(path);
}

</script>