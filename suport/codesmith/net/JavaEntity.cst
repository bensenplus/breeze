<%@ CodeTemplate Language="C#" TargetLanguage="Java" Src="" ResponseEncoding="UTF-8" Inherits="" Debug="False" Description="Template description here." %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Data.OleDb" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>

<%-- 注册 定义的成员变量 --%>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="DB" Description="请选择名的数据来源" %>
<%@ Property Name="RootTableSpaceName" Type="System.String" Default="org.breeze" Optional="False" Category="Context" Description="源码输出的模块名称" %>

<%-- 启用 MAP方式 System-CSharpAlias  --%>
<%@ Map Name="CSharpAlias" Src="System-CSharpAlias" Description="System to C# Type Map" %>
<%@ Map Name="JavaAlias" Src="JavaAlias.csmap" Description="Oracle to Java Type Map" %>

<script runat="template">
<!-- #include file=Function.cs -->
//Debugger.Break();
</script>
<% 
//名称定义
String Controller = ControllerName(SourceTable.Name);
String Mode = ModelName(SourceTable.Name);
String mode = StringUtil.ToCamelCase(SourceTable.Name);
String Service = ServiceName(SourceTable.Name);
String service = StringUtil.ToCamelCase(ServiceName(SourceTable.Name));
String Key = JavaAlias[SourceTable.Columns[0].SystemType.FullName];
String key = StringUtil.ToCamelCase(SourceTable.Columns[0].Name);
String map = StringUtil.ToCamelCase(SourceTable.Name);
%>
package <%=RootTableSpaceName%>.entity;

<% foreach (ColumnSchema column in this.SourceTable.Columns) {%>
<% if (JavaAlias[column.SystemType.FullName]=="Date"){%>
import java.util.Date;
<% break;}}%>

import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name="<%=SourceTable.Name%>")
public class <%=Mode%> implements Serializable{
    
    private static final long serialVersionUID = 1L;
    <% if (!this.SourceTable.HasPrimaryKey){%>@Id<%}
    foreach (ColumnSchema column in this.SourceTable.Columns) { 
    %>
    //<%=column.Description%><%if (column.IsPrimaryKeyMember){%>
    @Id<%}%>    
    @Column(name="<%=column.Name%>",columnDefinition="", <%if(column.Size>0){%>length=<%=column.Size%>, <%}if(column.Precision>0){%>precision=<%=column.Precision%>, <%}if(column.Scale>0){%>scale=<%=column.Scale%>, <%}%>nullable=<%=column.AllowDBNull.ToString().ToLower()%>)
	private <%=JavaAlias[column.SystemType.FullName]%> <%=fieldName(column.Name) %>;     
    <% }%>

	<% foreach (ColumnSchema column in this.SourceTable.Columns) {%>

	public <%=JavaAlias[column.SystemType.FullName]%> <%=getter(column.Name)%>() {
		return this.<%=fieldName(column.Name) %>;
	}

	public void <%=setter(column.Name)%>(<%=JavaAlias[column.SystemType.FullName]%> <%=fieldName(column.Name)%>) {
		this.<%=fieldName(column.Name)%> = <%=fieldName(column.Name)%>;
	}
    <%}%>
}
